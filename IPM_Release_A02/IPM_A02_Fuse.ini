; ------------------------------------------------------------------------------
; LTC5800-IPM Fuse Table
; ------------------------------------------------------------------------------
;
; Eterna’s Fuse Table is a 2kB page in flash that contains two data structures.
; One structure supports hardware configuration immediately following power-on
; reset or the assertion of RESETn. The second structure supports configuration
; of software board support parameters. Fuse Tables are generated via the Fuse
; Table application described in the Board Specific Configuration Guide.
;
; Hardware configuration of I/O immediately following power-on reset provides a
; method to minimize leakage due to floating nets prior to software
; configuration. I/O leakage can contribute hundreds of microamperes of leakage
; per input, potentially stressing current limited supplies. 
;
; Examples of software board support parameters include setting of UART modes,
; clock sources and trim values.
;
; Fuse Tables are loaded into flash using the same software and in-circuit
; programmer used to load software images as described in the Eterna Serial
; Programmer Guide.
; ------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
;This section enables the peripherals on-board the Eterna
;If set to zero, the pins are de-activated
[IO-Configuration-Upper]

; The Eterna's SPI master is used only in master mode
;
; The Eterna SPI master controller supports all configurations of clock polarity
; and phase, with a setable shift clock frequencies of 460.8kHz, 921.6kHz,
; 1.8432MHz, or 3.6864MHz. In addition the SPI master controller can be
; configured to repetatively issue commands and capture the corresponding
; output, enabling repetative sampling of signals from a SPI ADC or SPI sensor
; based upon a clock reference of better than +/-50ppm.
SPI_Master = 0
SPI_Master_Sel_0 = 0
SPI_Master_Sel_1 = 0
SPI_Master_Sel_2 = 0

;CLI UART Mode (unsure)
;CLI UART is required for system debugging
CLI_UART_0 = 1
CLI_UART_1 = 0

; The I2C Master enables control of I2C slave devices, including support for
; clock stretching slaves. I2C Multimaster and bus arbitration protocols are not
; supported.
I2C = 0

SPI_Slave = 0
SPI_Programming = 0

; The Eterna 1-Wire Master controller supports the reset, pressense detect, read
; and write 1-Wire protocol operations, incorporating an active pull-up. The
; active pull-up becomes active when the passive pull-up raises the voltage on
; the 1_WIRE pin nominally above 1.4V, driving the 1_WIRE signal 
1_Wire_Master = 0

; The RADIO_INHIBIT input enables an external controller to temporarily disable
; the radio software drivers (for example, to take a sensor reading that is
; susceptible to radio interference). When RADIO_INHIBIT is asserted the
; software radio drivers will disallow radio operations including clear channel
; assessment, packet transmits, or packet receipts. If the current timeslot is
; active when RADIO_INHIBIT is asserted the radio will be diabled after the
; present operation completes. 
Radio_Inhibit = 0

; Control signals generated by the autonomous MAC supporting the integration of
; an external LNA/PA
LNA_Enable = 0
Radio_TX = 0
Radio_TXn = 0

; The SLEEPn function is not currently supported in software. The SLEEPn input
; must either be tied, pulled or actively driven high to avoid excess leakage.
; Note 1.This pin is always enabled and must be driven or pulled to a valid
; state to avoid leakage (see datasheet/IPM01, Note 14)
SLEEPn = 0

TIMEn = 0

; Un-sure
PWM = 0
16_Bit_Timer_In = 0
8_Bit_Timer_In = 0
Low_Power_Timer_in = 0

; When selecting the External Bus option, this will also simultaneously disable
; CLI UART 0 and enable CLI UART 1 and is the only necessary configuration for
; External Bus support
External_Bus = 0

; ------------------------------------------------------------------------------
; Format: (Pin#_Signal) = (GPIO, InputEnable, PullUp, PullDown, OutputEnable,
; OutputValue, DriveStrength)
;
; GPIO = Configure pin as GPIO (only certain pins)
;
; InputEnable = IO’s input enable. Input leakage current will increase
;               substantially when IO’s that are not actively driven whose input
;               enable is set. PullUp = Enable the IO’s internal pull up
;               resistor. The internal pull up and pull down resistors can not
;               be simultaneously enabled.
;
; PullDown = Enable the IO’s internal pull down resistor. The internal pull up
;            and pull down resistors can not be simultaneously enabled. 
;
; OutputEnable = IO's output enable
;
; OutputValue = Output Value can only be set for IOs set at GPIO, other pin
;               functions have defined values for their inactive state and are
;               controlled via their controlling modules in the design. 
;
; DriveStrength = Only those IO’s with an active button shown in the Drive
;                 Strength column can be modified from their default value. It
;                 is strongly suggested that the minimum drive strength be
;                 selected unless there is an understood need for a higher drive
;                 strength. 
[IO-Configuration-Lower]

;Pin#01, Type 1, Input, No-Pull, Radio Inhibit
;------------------
;The RADIO_INHIBIT input enables an external controller to temporarily disable 
;the radio software drivers (for example, to take a sensor reading that is 
;susceptible to radio interference). When RADIO_INHIBIT is asserted the software
;radio drivers will disallow radio operations including clear channel 
;assessment, packet transmits, or packet receipts. If the current timeslot is
;active when RADIO_INHIBIT is asserted the radio will be diabled after the 
;present operation completes. 
;Note 1.This pin is always enabled and must be driven or pulled to a valid state
;to avoid leakage (see datasheet/IPM01, Note 14)
1_RADIO_INHIBIT = (1, 0, 0, 1, 0, 0, 1mA)

;Pin#11, Type 1, Output, No-Pull, External LNA Enable / GPIO17
;------------------
;Control signals generated by the autonomous MAC supporting the integration
;of an external LNA/PA
11_LNA_EN_GPIO17 = (1, 1, 0, 1, 0, 0, 1mA)

;Pin#12, Type 1, Output, No-Pull, Radio TX Active (External PA/Enable Switch 
;                                 Control) / GPIO18
;------------------
;Control signals generated by the autonomous MAC supporting the integration
;of an external LNA/PA
12_RADIO_TX_GPIO18 = (1, 1, 0, 1, 0, 0, 1mA)

;Pin#13, Type 1, Output, No-Pull, Radio TX Active (External PA/Enable Switch 
;                                 Control) Active Low / GPIO19
;------------------
;Control signals generated by the autonomous MAC supporting the integration
;of an external LNA/PA
13_RADIO_TXn_GPIO19 = (1, 1, 0, 1, 0, 0, 1mA)

;Pin#22, Type 1, Input, Pull-Up, Reset Input, Active Low
;------------------
;The asynchronous reset signal is internally pulled up. Resetting Eterna will 
;result in the ARM Cortex M3 rebooting and loss of network connectivity. Use of 
;this signal for resetting Eterna is not recommended except during power-on and
;in-circuit programming.
;Note 1: Must be asserted (along with FLASH_P_ENn) for in-circuit programming 
;over the IPCS SPI bus.
;Characteristics:
;   - RESETn Pulse Width
;       Min=125 us
22_RESETn = (na, na, 1, na, na, na, na)

;Pin#23, Type 1, Input, Pull-Up, JTAG Test Data In
;------------------
;JTAG Port Supporting Software Debug and Boundary Scan. Using
;IEEE Std 1149.1b-1994 Boundary Scan Definition Language (BDSL)
23_TDI = (na, na, 1, 0, na, na, na)

;#24, O     , No Pull           , JTAG Test Data Out
;------------------
;JTAG Port Supporting Software Debug and Boundary Scan. Using
;IEEE Std 1149.1b-1994 Boundary Scan Definition Language (BDSL)
24_TDO = (na, na, na, na, na, na, 1mA)

;#25, I     , Pull Up           , JTAG Test Mode Select
;------------------
;JTAG Port Supporting Software Debug and Boundary Scan. Using
;IEEE Std 1149.1b-1994 Boundary Scan Definition Language (BDSL)
25_TMS = (na, na, 1, 0, na, na, na)

;#26, I     , Pull Down         , JTAG Test Clock
;------------------
;JTAG Port Supporting Software Debug and Boundary Scan. Using
;IEEE Std 1149.1b-1994 Boundary Scan Definition Language (BDSL)
26_TCK = (na, na, 0, 1, na, na, na)

;#27, IO, No Pull       , General Purpose Digital I/O
;------------------
27_DP4_GPIO23 = (1, 1, 0, 1, 0, 0, 1mA)

;#33, IO    , No Pull       , General Purpose Digital I/O
;#33, I     , No Pull       , External Input to 8-Bit Timer/Counter
;------------------
33_DP3_GPIO22_TIMER8_IN = (1, 1, 0, 1, 0, 0, 1mA)

;#34, IO    , No Pull       , General Purpose Digital I/O
;#24, I     , No Pull       , External Input to Low Power Timer/Counter
;------------------
34_DP2_GPIO21_LPTIMER_IN = (1, 1, 0, 1, 0, 0, 1mA)

;#35, I     , No Pull       , Deep Sleep, Active Low
;#35, IO    , No Pull       , General Purpose Digital I/O
;------------------
;The SLEEPn function is not currently supported in software. The SLEEPn input 
;must either be tied, pulled or actively driven high to avoid excess leakage.
;Note 1.This pin is always enabled and must be driven or pulled to a valid state
;to avoid leakage (see datasheet/IPM01, Note 14)
35_SLEEPn_GPIO14 = (0, 1, 0, 1, 0, 0, 1mA)

;#36, IO    , No Pull       , General Purpose Digital I/O
;#36, O     , No Pull       , SPI Master Slave Select 2, Active Low
;------------------
;The Eterna's SPI Master bus with support for up to three SPI slave devices, via
;the On-Chip Software Development Kit (On-Chip SDK) provides an interface to SPI
;peripheral slave devices. The SPI interface is syncrhonous to SPIM_CLK, which 
;should be treated as a clock singal and terminated appropriately.
36_DP0_GPIO0_SPIM_SS_2n = (1, 1, 0, 1, 0, 0, 1mA)

37_UARTCO_TX = (na, 0, 0, 0, 1, na, 2mA)
38_UARTCO_RX = (na, 1, 1, 0, 0, na, 1mA)
39_SPIM_MISO_GPIO11 = (0, 0, 0, 0, 0, na, 1mA)
40_IPCS_MISO_GPIO6 = (0, na, na, na, 0, na, 2mA)
41_SPIM_MOSI_GPIO10 = 0, 0, 0, 0, 0, na, 2mA)
42_IPCS_MOSI_GPIO5 = (0, 0, 0, 0, na, na, 1mA)
43_SPIM_SCK_GPIO9 = (0, 0, 0, 0, 0, na, 2mA)
44_IPCS_SCK_GPIO4 = (0, 0, 0, 0, na, na, 1mA)
45_IPCS_SSN_GPIO3 = (0, 0, 0, 0, na, na, 1mA)
46_SPIM_SS_1N_GPIO13 = (0, 0, 0, 0, 0, na, 1mA)
47_SPIM_SS_0N_GPIO12 = (0, 0, 0, 0, 0, na, 1mA)
48_DP1_GPIO20_TIMER16_IN = (0, 0, 0, 0, 0, 1mA)
49_PWM0_GPIO16 = (0, 0, 0, 0, 0, na, 2mA)
50_SPIS_MISO_1_WIRE_UARTC1_TX = (na, 0, 0, 0, 0, na, 2mA)
51_SPIS_MOSI_GPIO26_UARTC1_RX = (0, 0, 0, 0, 0, 0, 1mA)
52_SPIS_SCK_SCL = (na, 0, 0, 0, 0, na, 2mA)
53_SPIS_SSN_SDA = (na, 0, 0, 0, 0, na, 2mA)
55_FLASH_P_ENn = (na, 1, 1, 0, na, 1mA)
66_UART_RX_RTSn = (na, 1, 0, 0, na, na, na)
67_UART_RX_CTSn = (na, na, na, na, 1, na, 1mA)
68_UART_RX = (na, 1, 0, 0, na, na, na)
69_UART_TX_RTSn = (na, na, na, na, 1, na, 1mA)
70_UART_TX_CTSn = (na, 1, 0, 0, na, na, na)
71_UART_TX = (na, na, na, na, 1, na, 2mA)
72_TIMEn = (0, 0, 0, 0, 0, na, 1mA)


[Board-Support-Parameters]

; Required
; The Manufacturing ID is a 16-bit unique identifier for each manufacturer and
; allows the ability to provide targeted software based upon the combination of
; Manufacture ID, Board ID and Board Revision. Please contact your sales
; representative to obtain a Manufacturing ID for your organization if you do
; not currently have one.
0x00_Manufacture_ID = (0, 0x)

; Required
; The Board ID is a 16-bit unique identifier for each printed circuit board
; incorporating Eterna produced by a given manufacturer and allows the ability
; to provide targeted software based upon the combination of Manufacture ID,
; Board ID and Board Revision. Manufacturers should manage their own list of
; Board IDs. 
0x01_Board_ID_0x01 = (0, 0x)

; Required
; The Board Revision is a 16-bit unique identifier for each printed circuit
; board incorporating Eterna produced by a given manufacturer and allows the
; ability to provide targeted software based upon the combination of Manufacture
; ID, Board ID and Board Revision. Manufacturers should manage their own list of
; Board IDs. 
0x02_Board_Revision = (0, na)

; The CLI Port parameter allows for the disabling of the CLI Port. Use of this
; configuration is not recommended.
0x03_CLI_PORT = (0, na)

; The API UART parameter allows for the disabling of the API UART Port. Use of
; this configuration is not recommended. 
0x03_API_UART = (0, na)

; The CLI Port parameter allows for switching the CLI Port Location. This is a
; test mode for Dust Networks internal use. 
0x03_CLI_Port_Selection = (0, na)

; Required
; The API UART Mode determines the operating mode for the UART. This should be
; selected according to the modes defined in the Eterna datasheet. 
0x04_API_UART_Mode = (1, MODE 2)

; The baud rate for the API UART interface. Supported values are defined in the
; Eterna datasheet. Absence of setting this field results in the default setting
; from the Eterna datasheet. 
0x0A_API_UART_Baud_Rate = (0, 115200)

; This parameter corresponds to the t(TX to TX_CTSn) timing parameter in the
; Eterna datasheet. Use of this configuration is not recommended. Absence of
; setting this field results in the default setting from the Eterna datasheet. 
0x05_API_UART_TX_To_CTSn_Timeout = (0, na)

; This parameter corresponds to the t(CTSn to RX) timing parameter in the Eterna
; datasheet. Use of this configuration is not recommended. Absence of setting
; this field results in the default setting from the Eterna datasheet. 
0x06_API_UART_CTSn_To_Rx_Timeout = (0, na)

; This parameter corresponds to the t(EOP to TX_CTSn) timing parameter in the
; Eterna datasheet. Use of this configuration is not recommended. Absence of
; setting this field results in the default setting from the Eterna datasheet. 
0x07_API_UART_EOP_To_RTSn_Timeout = (0, na)

; This parameter corresponds to the tRX INTERBYTE timing parameter in the Eterna
; datasheet. Use of this configuration is not recommended. Absence of setting
; this field results in the default setting from the Eterna datasheet.
0x08_API_UART_Interbyte_Timeout = (0, na)

; This parameter corresponds to the tRTSn to TX_CTSn timing parameter in the
; Eterna datasheet. Use of this configuration is not recommended. Absence of
; setting this field results in the default setting from the Eterna datasheet. 
0x09_API_UART_RTSn_To_CTSn_Timeout = (0, na)

; Enable software to act upon the assertion of the RADIO_INHIBIT input. If the
; radio inhibit function is not used then this function should not be enabled
0x0B_RADIO_INHIBITn_Function = 0

; Enable software to act upon the assertion of the SLEEPn input. If the radio
; inhibit function is not used then this function should not be enabled.
0x0B_SLEEPn_Function = 0

; The baud rate for the CLI UART interface. Supported values are defined in the
; Eterna datasheet. Absence of setting this field results in the default setting
; from the Eterna datasheet. 
0x0C_CLI_UART_Baud_Rate = (0, 9600)

; Mode settings for supporting external RF PA and LNA hardware. Supported values
; are defined in the Eterna datasheet. 
0X0D_External_PA_LNA_Support_Mode = (1, None)

; Selects the 32kHz source. Absence of setting this field results in a setting
; for the use of a 32 kHz xtal. 
0X0E_32kHz_Source = (0, na)

; Required
; Select the crystal part number included in the BOM See 040-0102 Eterna
; Hardware Integration Guide for the list of supported 20 MHz crystals. 
0x0F_0X12_20MHz_xtal_Part_Number = (0, ECS-200-CDX-0914)

; Required
; The programmable load on the 20 MHz xtal. This value needs to be trimmed for
; each new design where a design changes the PCB layout or the crystal. Trimming
; is essential to center the radio channels. See 040-0102 Eterna Hardware
; Integration Guide for procedures to trim the crystal in a new design.
0x13_20MHz_load_trim = (0, 75)

; Test mode trimming for the radio receive operation. Use of this configuration
; is not recommended. 
0x14_Radio_Rx_Trim = (0, na)

; A 16 bit signed offset to be applied to all time of flight measurements. Use
; of this configuration is not recommended.
0x15_Time_of_Flight_Offset = (0, na)

; Enable for current limited operation. Current limited operation, will result
; in the device going into a low power state after completing its current atomic
; operation, following the voltage falling below the “Lower Voltage Limit”. The
; device will remain in a low power state for a duration in ms set by “Current
; Limit Off Time”. After waiting the device will check to see that the voltage
; is above “Upper Voltage Limit” prior to returning to an active state. If not
; the device will again return to a low power state for another “Current Limit
; Off Time” ms. 
0x16_Current_Limited_Operation = 0

; The lower voltage trip point that results in Eterna entering a low power state
; and waiting for “Current Limit Off Time” ms prior to attempting to resume
; operation.
0x16_Lower_Voltage_Limit = 0

; The upper voltage trip point that Eterna checks when returning from a low
; power state. If the trip point is not met the device will return to a low
; power state for another “Current Limit Time Off” ms. 
0x16_Upper_Voltage_Limit = 0

; The interval Eterna will remain in a low power state in ms prior to checking
; to see if the supply is above the “Upper Voltage Limit”. 
0x16_Current_Limit_Off_Time = 0

; This field is only required for the LTC5800-IPRA, LTC5800-IPRB, LTP5901-IPRA,
; LTP5901-IPRB, LTP5901-IPRC, LTP5902-IPRA, LTP5902-IPRB and LTP5902-IPRC
; products and should not be enabled for other products. Set this field to the
; appropriate external memory size and –IPRA / -IPRB product dash option.
0x17_IP_Manager_Ext_Memory_Size = (0, na)

; No documenation relevant
0x19_uclk_Base_Rate = (0, na)

; No documenation relevant
0x1A_uclk_SpeedUp_Rate = (0, na)

; No documenation relevant
0x1B_Radio_Tx_Pout_Limit = (0, na)

; No documenation relevant
0x1C_API_Port_Sleep_Enable = (0, na)

; No documenation relevant
0x1D_Extended_Temp_Range_Enable = (0, na)